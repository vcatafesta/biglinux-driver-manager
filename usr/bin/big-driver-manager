#!/usr/bin/env bash
#shellcheck disable=SC2155,SC2034
#shellcheck source=/dev/null

#  /usr/bin/big-driver-manager
#  Description: Big Driver Manager installing programs for BigLinux
#
#  Created: 2020/01/11
#  Altered: 2024/07/01
#
#  Copyright (c) 2023-2024, Vilmar Catafesta <vcatafesta@gmail.com>
#                2022-2023, Bruno Gonçalves <www.biglinux.com.br>
#                2022-2023, Rafael Ruscher <rruscher@gmail.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

APP="${0##*/}"
_VERSION_="1.0.0-20240701"
export BOOTLOG="/tmp/big-driver-manager-$USER-$(date +"%d%m%Y").log"
export LOGGER='/dev/tty8'
export HOME_FOLDER="$HOME/.big-driver-manager"
export TMP_FOLDER="/tmp/big-driver-manager-$USER"
export INI_FILE_BIG_DRIVER="$HOME_FOLDER/big-driver-manager.ini"
LIBRARY=${LIBRARY:-'/usr/share/bigbashview/bcc/shell'}
[[ -f "${LIBRARY}/bcclib.sh" ]] && source "${LIBRARY}/bcclib.sh"
[[ -f "${LIBRARY}/bstrlib.sh" ]] && source "${LIBRARY}/bstrlib.sh"
[[ -f "${LIBRARY}/tinilib.sh" ]] && source "${LIBRARY}/tinilib.sh"

function sh_big_driver_manager_config() {
	#desabilitando variáveis proxy do dde, as mesmas não permitem atualizações do pamac
	unset auto_proxy ftp_proxy http_proxy https_proxy no_proxy all_proxy
	#Translation
	export TEXTDOMAINDIR="/usr/share/locale"
	export TEXTDOMAIN=biglinux-driver-manager
	declare -g drivers_path='/usr/share/bigbashview/bcc/apps/drivers'
	declare -g big_driver_manager_icon_file='/usr/share/icons/hicolor/scalable/apps/big-driver-manager.svg'
	declare -g TITLE="Big-Driver-Manager"
	declare -gA Amsg=(
		[error_open]=$(gettext $"Outra instância do Big-Driver-Manager já está em execução.")
		[error_access_dir]=$(gettext $"Erro ao acessar o diretório:")
	)
}

function sh_big_driver_manager_check_dirs {
	[[ ! -d "$HOME_FOLDER" ]] && mkdir -p "$HOME_FOLDER"
	[[ ! -d "$TMP_FOLDER" ]] && mkdir -p "$TMP_FOLDER"
	[[ ! -d "$drivers_path" ]] && mkdir -p "$drivers_path"
}
export -f sh_big_driver_manager_check_dirs

function sh_big_driver_manager_is_running() {

	local PID

	if PID=$(pgrep -f 'Big-Driver-Manager') && [[ -n "$PID" ]]; then
		yad --title "$TITLE" --image=big-driver-manager --text "${Amsg[error_open]}\nPID:$PID" --button="OK":0
		exit 1
	fi
}
export -f sh_big_driver_manager_is_running

function sh_big_driver_manager_main() {
	local height
	local widht
	local half_height
	local half_widht
	local processamento_em_paralelo=1
	local ident_keys=1

	sh_big_driver_manager_check_dirs
	cd "$drivers_path" || {
		notify-send --icon=big-driver-manager --app-name "$0" "$TITLE" "${Amsg[error_access_dir]}\n$drivers_path" --expire-time=2000
		return 1
	}

	width=$(xrandr | grep -oP 'primary \K[0-9]+(?=x)')
	height=$(xrandr | grep -oP 'primary \K[0-9]+x\K[0-9]+')
	half_width=$((width / 2))
	half_height=$((height / 2))

	# Save dynamic screenshot resolution
	echo "$half_height" >"${TMP_FOLDER}/screenshot-resolution.txt"

	_session="$(sh_get_desktop_session)"
	case "${_session^^}" in
	X11)
		QT_QPA_PLATFORM=xcb \
			SDL_VIDEODRIVER=x11 \
			WINIT_UNIX_BACKEND=x11 \
			GSK_RENDERER=cairo \
			GDK_BACKEND=x11 \
			bigbashview \
			-n "$TITLE" \
			-w maximized index.sh.htm \
			-i $big_driver_manager_icon_file
		;;
	WAYLAND)
		MOZ_ENABLE_WAYLAND=1 \
			bigbashview \
			-n "$TITLE" \
			-w maximized index.sh.htm \
			-i $big_driver_manager_icon_file
		;;
	esac
}

#sh_debug
sh_big_driver_manager_config
sh_big_driver_manager_is_running
sh_big_driver_manager_main "$@"
